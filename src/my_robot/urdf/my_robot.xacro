<?xml version="1.0"?>

<robot name="my_robot" xmlns:xacro="http://ros.org/wiki/xacro">
	<property name="base_width_x" value="0.5"/>
	<property name="base_width_y" value="0.3" />
	<property name="base_height" value="0.1"/>

	<property name="wheel_radius" value="0.1" />
	<property name="wheel_length" value="0.02" />

	<property name="cylinder_length" value="0.2" />

	<property name="hokuyo_size" value="0.05" />
	<property name="map_origin_to_base_origin" value= "0.0"/>

	<property name="PI" value="3.141592" />

  <macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" /> 
  </macro>

	<link name="base_footprint">
    <visual>
        <origin xyz="0 0 0 " rpy="0 0 0" />
        <geometry>
            <box size="0.001 0.001 0.001" />
        </geometry>
    </visual>
  </link>

  <gazebo reference="base_footprint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 ${wheel_radius + base_height/2}" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="base_link" />
  </joint>

	<link name="base_link">
		<visual>
			<origin xyz="0 0 ${wheel_radius + base_height/2}" rpy="0 0 0" />
			<geometry>
				<box size="${base_width_x} ${base_width_y} ${base_height}" />
			</geometry>
		</visual>

		<collision>
			<origin xyz="0 0 ${wheel_radius + base_height/2}" rpy="0 0 0" />
			<geometry>
				<box size="${base_width_x} ${base_width_y} ${base_height}" />
			</geometry>
		</collision>

		<inertial>
		  <origin xyz="0 0 0" rpy="0 0 0"/>
		  <mass value="1"/>
		  <inertia
		    ixx="1.0" ixy="0.0" ixz="0.0"
		    iyy="1.0" iyz="0.0"
		    izz="1.0"/>
		</inertial>
	</link>
 
	<gazebo reference="base_link" >
		<material>Gazebo/White</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>	
	
	<link name="bl_wheel">
		<visual>
			<origin xyz="0 0 0" rpy="${PI/2} 0 0 " />
			<geometry>
				<cylinder length="${wheel_length}" radius="${wheel_radius}" />
			</geometry>
		</visual>

		<collision>
			<origin xyz="0 0 0" rpy="${PI/2} 0 0 " />
			<geometry>
				<cylinder length="${wheel_length}" radius="${wheel_radius}" />
			</geometry>
		</collision>

		<inertial>
      		<origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      		<mass value="1"/>
			<cylinder_inertia  m="1" r="${wheel_radius}" h="${wheel_length}" />
    	</inertial>
	</link>

	<gazebo reference="bl_wheel" >
		<material>Gazebo/Black</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>

	<joint name="bl_wheel_joint" type="continuous" >
		<origin xyz="${-base_width_x/2} ${base_width_y/2 + wheel_length} ${wheel_radius}" rpy="0 0 0" />
		<parent link="base_link" />
		<child link="bl_wheel" />
    <axis xyz="0 1 0" rpy="0  0" />
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
	</joint>

	<transmission name="bl_wheel_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="bl_wheel_joint" >
			<hardwareInterface>EffortJointInterface</hardwareInterface>
		</joint>
    <actuator name="motor1">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
	</transmission>

	<link name="fl_wheel">
		<visual>
			<origin xyz="0 0 0" rpy="${PI/2} 0 0 " />
			<geometry>
				<cylinder length="${wheel_length}" radius="${wheel_radius}" />
			</geometry>
		</visual>

		<collision>
			<origin xyz="0 0 0" rpy="${PI/2} 0 0 " />
			<geometry>
				<cylinder length="${wheel_length}" radius="${wheel_radius}" />
			</geometry>
		</collision>
		<inertial>
			<origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
			<mass value="1"/>
			<cylinder_inertia  m="1" r="${wheel_radius}" h="${wheel_length}" />
		</inertial>
	</link>

	<gazebo reference="fl_wheel" >
		<material>Gazebo/Black</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>

	<joint name="fl_wheel_joint" type="continuous" >
		<origin xyz="${base_width_x/2} ${base_width_y/2 + wheel_length} ${wheel_radius}" rpy="0 0 0" />
		<parent link="base_link" />
		<child link="fl_wheel" />
    <axis xyz="0 1 0" rpy="0  0" />
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
	</joint>

	<transmission name="fl_wheel_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="fl_wheel_joint">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
		</joint>
    <actuator name="motor2">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
	</transmission>



	<link name="br_wheel">
		<visual>
			<origin xyz="0 0 0" rpy="${PI/2} 0 0 " />
			<geometry>
				<cylinder length="${wheel_length}" radius="${wheel_radius}" />
			</geometry>
		</visual>

		<collision>
			<origin xyz="0 0 0" rpy="${PI/2} 0 0 " />
			<geometry>
				<cylinder length="${wheel_length}" radius="${wheel_radius}" />
			</geometry>
		</collision>

		<inertial>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <mass value="1"/>
			<cylinder_inertia  m="1" r="${wheel_radius}" h="${wheel_length}" />
    </inertial>
	</link>

	<gazebo reference="br_wheel" >
		<material>Gazebo/Black</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>

	<joint name="br_wheel_joint" type="continuous" >
		<origin xyz="${-base_width_x/2} ${-base_width_y/2 - wheel_length} ${wheel_radius}" rpy="0 0 0" />
		<parent link="base_link" />
		<child link="br_wheel" />
    <axis xyz="0 1 0" rpy="0  0" />
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
	</joint>

	<transmission name="br_wheel_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="br_wheel_joint" >
			<hardwareInterface>EffortJointInterface</hardwareInterface>
		</joint>
    <actuator name="motor3">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
	</transmission>



	<link name="fr_wheel">
		<visual>
			<origin xyz="0 0 0" rpy="${PI/2} 0 0 " />
			<geometry>
				<cylinder length="${wheel_length}" radius="${wheel_radius}" />
			</geometry>
		</visual>

		<collision>
			<origin xyz="0 0 0" rpy="${PI/2} 0 0 " />
			<geometry>
				<cylinder length="${wheel_length}" radius="${wheel_radius}" />
			</geometry>
		</collision>

		<inertial>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <mass value="1"/>
			<cylinder_inertia  m="1" r="${wheel_radius}" h="${wheel_length}" />
    </inertial>
	</link>

	<gazebo reference="fr_wheel" >
		<material>Gazebo/Blue</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>

	<joint name="fr_wheel_joint" type="continuous" >
		<origin xyz="${base_width_x/2} ${-base_width_y/2 - wheel_length} ${wheel_radius}" rpy="0 0 0" />
		<parent link="base_link" />
		<child link="fr_wheel" />
    <axis xyz="0 1 0" rpy="0  0" />
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
	</joint>

	<transmission name="fr_wheel_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="fr_wheel_joint" >
			<hardwareInterface>EffortJointInterface</hardwareInterface>
		</joint>
    <actuator name="motor4">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
	</transmission>


	<link name="cylinder_link" >
		<visual>
			<origin xyz="0 0 ${cylinder_length/2}" rpy="0 0 0 " />
			<geometry>
				<cylinder length="${cylinder_length}" radius="${base_width_y/2}" />
			</geometry>
		</visual>

		<collision>
			<origin xyz="0 0 ${cylinder_length/2}" rpy="0 0 0 " />
			<geometry>
				<cylinder length="${cylinder_length}" radius="${base_width_y/2}" />
			</geometry>
		</collision>

		<inertial>
      		<origin xyz="0 0 0" rpy="0 0 0"/>
      		<mass value="1"/>
			<cylinder_inertia  m="1" r="${base_width_y/2}" h="${cylinder_length}" />
   		</inertial>
	</link>

	<gazebo reference="cylinder_link" >
		<material>Gazebo/Blue</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>


	<joint name="cylinder_joint" type="revolute" >
		<origin xyz="0 0 ${base_height + wheel_radius}" rpy="0 0 0" />
		<parent link="base_link" />
		<child link="cylinder_link" />
		<axis xyz="0 0 1" />
		<limit effort="100" velocity="100" upper="1000000000" lower="-1000000000"/>
		<joint_properties damping="0.0" friction="0.0"/>
	</joint>

	<transmission name="cylinder_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="cylinder_joint" >
			<hardwareInterface>EffortJointInterface</hardwareInterface>
		</joint>
    <actuator name="motor5">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
	</transmission>


  <link name="hokuyo_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${hokuyo_size} ${hokuyo_size} ${hokuyo_size}"/>
      </geometry>
      <material name="Blue" />
    </visual>
  </link>

  <joint name="hokuyo_joint" type="fixed">
    <origin xyz="${base_width_x/4 - hokuyo_size/2} 0 ${cylinder_length +hokuyo_size/4}" rpy="0 0 0" />
    <parent link="cylinder_link"/>
    <child link="hokuyo_link" />
  </joint>

<!-- add laser sensor to hokuyo link -->
 <gazebo reference="hokuyo_link">
    <material>Gazebo/Blue</material>
    <turnGravityOff>false</turnGravityOff>
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>${hokuyo_size/2} 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>${-PI/6}</min_angle>
            <max_angle>${PI/6}</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>20.0</max>
          <resolution>0.001</resolution>
        </range>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>


	<link name="camera_link" >
		<visual>
			<origin rpy="0 0 0" xyz="0 0 0.02" />
			<geometry>
				<box size="0.04 0.04 0.04" />
			</geometry>
		</visual>
		<collision>
			<origin rpy="0 0 0" xyz="0 0 0" />
			<geometry>
				<box size="0.04 0.04 0.04" />
			</geometry>
		</collision>
		<inertial>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<mass value="1" />
			<cylinder_inertia m="1" r="0.04" h="0.04" />
		</inertial>

	</link>

	<joint name="camera_joint" type="fixed" >
		<origin rpy="0 0 0" xyz="${base_width_x/2 - 0.04} 0 ${base_height + wheel_radius}" />
		<parent link="base_link" />
		<child link="camera_link" />
	</joint>


	<link name="gps_link" >
		<visual>
			<origin rpy="0 0 0" xyz="0 0 0.01" />
			<geometry>
				<box size="0.02 0.02 0.02" />
			</geometry>
		</visual>
		<collision>
			<origin rpy="0 0 0" xyz="0 0 0" />
			<geometry>
				<box size="0.1 0.1 0.1" />
			</geometry>
		</collision>
		<inertial>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<mass value="1" />
			<cylinder_inertia m="1" r="0.02" h="0.02" />
		</inertial>
	</link>

	<gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>my_robot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

	<joint name="gps_joint" type="fixed" >
		<origin rpy="0 0 0" xyz="0 0 0.04" />
		<parent link="camera_link" />
		<child link="gps_link" />
	</joint>



	<!-- add GPS sensor to gps_link -->


	<!-- add GPS plugin to publish data -->
  <gazebo>
    <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
      <updateRate>40</updateRate>
      <robotNamespace>/</robotNamespace>
      <bodyName>gps_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>/my_robot/fix</topicName>
      <velocityTopicName>/my_robot/vel</velocityTopicName>
      <referenceLatitude>49.9</referenceLatitude>
      <referenceLongitude>8.9</referenceLongitude>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>0.0001 0.0001 0.0001</drift>
    </plugin>
  </gazebo>

<!--
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

      <rosDebugLevel>Debug</rosDebugLevel>
      <publishWheelTF>false</publishWheelTF>
      <robotNamespace>/</robotNamespace>
      <publishTf>1</publishTf>
      <publishWheelJointState>false</publishWheelJointState>
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <leftJoint>bl_wheel_joint</leftJoint>
      <rightJoint>br_wheel_joint</rightJoint>
      <wheelSeparation>${base_width_y + 2*wheel_length}</wheelSeparation>
      <wheelDiameter>${2*wheel_radius}</wheelDiameter>
      <broadcastTF>1</broadcastTF>
      <wheelTorque>30</wheelTorque>
      <wheelAcceleration>1.8</wheelAcceleration>
      <commandTopic>cmd_vel</commandTopic>
      <odometryFrame>odom</odometryFrame> 
      <odometryTopic>odom</odometryTopic> 
      <robotBaseFrame>base_link</robotBaseFrame>
      <legacyMode>false</legacyMode>
      <odometrySource>world</odometrySource> 
      <publishTf>1</publishTf>

    </plugin>
  </gazebo>  -->
 
<!-- add velodyne plugin to cylinder to make it spin, poorly implemented by me and needs to get the right joint -->
<!-- it can be changed on the package velodye_plugin src folder -->
	<!--
  <gazebo>
		<plugin name="velodyne_control" filename="libvelodyne_plugin.so"/>
  </gazebo> -->

	<gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
		  <robotNamespace>/my_robot</robotNamespace>
    	<robotBaseFrame>base_link</robotBaseFrame>
		</plugin>
	</gazebo>
<!--
	<gazebo>
	  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
		<updateRate>100.0</updateRate>
		<robotNamespace>/</robotNamespace>
		<leftFrontJoint>fl_wheel_joint</leftFrontJoint>
		<rightFrontJoint>fr_wheel_joint</rightFrontJoint>
		<leftRearJoint>bl_wheel_joint</leftRearJoint>
		<rightRearJoint>br_wheel_joint</rightRearJoint>
		<wheelSeparation>${base_width_y + 2*wheel_length}</wheelSeparation>
		<wheelDiameter>${2*wheel_radius}</wheelDiameter>
		<robotBaseFrame>base_link</robotBaseFrame>
		<torque>30</torque>
		<topicName>cmd_vel</topicName>
		<commandTopic>cmd_vel</commandTopic>
		<broadcastTF>false</broadcastTF>
	  </plugin>
	</gazebo>
-->


</robot>


