<?xml version="1.0"?>

<robot name="drone" xmlns:xacro="http://ros.org/wiki/xacro">

	<xacro:include filename="$(find import_duck_gazebo)/urdf/wheel.urdf.xacro" /> 
	
  <property name="M_PI" value="3.1415926535897931" />
  <property name="M_PI_2" value="1.570796327" />
  <property name="DEG_TO_RAD" value="0.017453293" />

  <!-- Main body radius and height -->
  <!-- Main Body Cylinder base   -->
  <property name="base_height" value="0.02" /> 
  <property name="base_radius" value="0.15" /> 
  <property name="base_mass" value="5" /> <!-- in kg-->



  <!-- caster wheel radius and height -->
  <!-- caster wheel mass -->
  <property name="caster_f_height" value="0.04" /> 
  <property name="caster_f_radius" value="0.025" /> 
  <property name="caster_f_mass" value="0.5" /> <!-- in kg-->



  <!-- caster wheel radius and height -->
  <!-- caster wheel mass -->
  <property name="caster_b_height" value="0.04" /> 
  <property name="caster_b_radius" value="0.025" /> 
  <property name="caster_b_mass" value="0.5" /> <!-- in kg-->




  <!-- Wheels -->

  <property name="wheel_mass" value="2.5" /> --> <!-- in kg-->
  
  <property name="base_x_origin_to_wheel_origin" value="0.25" />
  <property name="base_y_origin_to_wheel_origin" value="0.3" />
  <property name="base_z_origin_to_wheel_origin" value="0.0" />


  <!-- Hokuyo Laser scanner -->
  <property name="hokuyo_size" value="0.05" />



  <!-- Macro for calculating inertia of cylinder -->
  <macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" /> 
  </macro>

  <link name="base_footprint">
    <inertial>
      <mass value="0.0001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
          iyy="0.0001" iyz="0.0" 
          izz="0.0001" />
    </inertial>
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="0.001 0.001 0.001" />
        </geometry>
    </visual>
  </link>

  <gazebo reference="base_footprint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 ${wheel_radius - base_z_origin_to_wheel_origin}" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="drone_link" />
  </joint>

<!-- Girona 500 link -->

	<link name="drone_link">
		<inertial>
			<mass value="2" />
			<origin xyz="0 0 0" />
			<inertia ixx="0.01152" ixy="0.0" ixz="0.0" iyy="0.01152" iyz="0.0" izz="0.0218" />
		</inertial>

		<visual>
			<origin xyz="0 0 0.5" rpy="${M_PI + M_PI/6} 0 0" />
			<geometry>
	  		<mesh filename="package://import_duck_gazebo/meshes/girona500.dae"/>
			</geometry>
		</visual>

		<collision>
			<origin xyz="0 0 0" rpy="${M_PI + M_PI/6} 0 0" />
			<geometry>
	  			<mesh filename="package://import_duck_gazebo/meshes/girona500.stl"/>
			</geometry>
		</collision>
	</link>

	<gazebo reference="drone_link">
		<material>Gazebo/Yellow</material>
	</gazebo>




<!--Caster front  -->

    <link name="caster_front_link">

      <collision>
        <geometry>

	<sphere radius="${caster_f_radius}" />

        </geometry>
      <origin xyz="0 0.02 0" rpy="${M_PI/2} 0 0" />
      </collision>      
      <inertial>
        <mass value="${caster_f_mass}" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0" 
                 izz="0.001" />
      </inertial>
    </link>



 	<joint name="caster_front_joint" type="fixed">
      <parent link="drone_link"/>
      <child link="caster_front_link"/>
      <origin xyz="0.115 0.0 0.007" rpy="${-M_PI/2} 0 0"/>
    </joint>


  <gazebo reference="caster_front_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

<!--Caster back  -->

    <link name="caster_back_link">

      <collision>
        <geometry>
		<sphere radius="${caster_b_radius}" />
        </geometry>
      <origin xyz="0 0.02 0 " rpy="${M_PI/2} 0 0" /> 
      </collision>      
      <inertial>
        <mass value="${caster_b_mass}" />
        <origin xyz="0 0 0" />        
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0" 
                 izz="0.001" />
      </inertial>
    </link>

    <joint name="caster_back_joint" type="fixed">
      <parent link="drone_link"/>
      <child link="caster_back_link"/>
      <origin xyz="-0.135 0.0 0.009" rpy="${-M_PI/2} 0 0"/>
    </joint>


  <gazebo reference="caster_back_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>



<!-- Wheel Definitions -->

  <wheel fb="front" lr="right" parent="drone_link" translateX="0" translateY="1.2" flipY="1"/>
  <wheel fb="front" lr="left" parent="drone_link" translateX="0" translateY="0.08" flipY="1"/>



	<!-- Sensors -->

  <link name="hokuyo_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${hokuyo_size} ${hokuyo_size} ${hokuyo_size}"/>
      </geometry>
      <material name="Blue" />
    </visual>
  </link>

  <joint name="hokuyo_joint" type="fixed">
    <origin xyz="${base_radius - hokuyo_size/2 + 0.5} 0 ${base_height+hokuyo_size/4 +0.5}" rpy="0 0 0" />
    <parent link="drone_link"/>
    <child link="hokuyo_link" />
	<axis xyz="0 0 1" />
	<limit effort="300" velocity="1" lower="-2.61799387799" upper="2.6128806087" />
  </joint>

  <gazebo reference="hokuyo_link">
    <material>Gazebo/Blue</material>
    <turnGravityOff>false</turnGravityOff>
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>${hokuyo_size/2} 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>20.0</max>
          <resolution>0.001</resolution>
        </range>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

<!--
	<transmission name="hokuyo_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="hokuyo_joint" />
      <actuator name="hokuyo_joint_motor">
        <hardwareInterface>PositionJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

	<gazebo>
		<plugin name="gazebo_ros_control" filename="lib_gazebo_ros_control">
			<robotNamespace>/drone</robotNamespace>
		</plugin>
	</gazebo>

-->
  
  <!-- Differential drive controller  -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

      <rosDebugLevel>Debug</rosDebugLevel>
      <publishWheelTF>false</publishWheelTF>
      <robotNamespace>/</robotNamespace>
      <publishTf>1</publishTf>
      <publishWheelJointState>false</publishWheelJointState>
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <leftJoint>front_left_wheel_joint</leftJoint>
      <rightJoint>front_right_wheel_joint</rightJoint>
      <wheelSeparation>${2*base_radius}</wheelSeparation>
      <wheelDiameter>${2*wheel_radius}</wheelDiameter>
      <broadcastTF>1</broadcastTF>
      <wheelTorque>30</wheelTorque>
      <wheelAcceleration>1.8</wheelAcceleration>
      <commandTopic>cmd_vel</commandTopic>
      <odometryFrame>odom</odometryFrame> 
      <odometryTopic>odom</odometryTopic> 
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <legacyMode>false</legacyMode>
      <odometrySource>world</odometrySource> <!-- 'encoder' instead of 'world' is also possible -->
      <publishTf>1</publishTf>

    </plugin>
  </gazebo> 
	
 
</robot>
